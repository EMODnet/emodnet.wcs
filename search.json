[{"path":[]},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement salvador.fernandez@vliz.. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to EMODnetWCS","title":"Contributing to EMODnetWCS","text":"outlines propose change EMODnetWCS.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to EMODnetWCS","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to EMODnetWCS","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to EMODnetWCS","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"EMODnet/EMODnetWCS\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to EMODnetWCS","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat httptest unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to EMODnetWCS","text":"Please note EMODnetWCS project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 European Marine Observation Data Network (EMODnet) Biology project Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/coverages.html","id":"subset-using-a-bounding-box","dir":"Articles","previous_headings":"","what":"Subset using a bounding box","title":"Downloading Coverages","text":"downloading full coverages services work, may take long time depending size coverage ’s often good idea focus areas interest use bounding boxes subset requests. coverages can downloaded full, coverages \"bathymetry\" service particular 100GB size full download permitted server spatial subsetting must used services. Otherwise request return curl error (likely curl: (92) HTTP/2 stream 0 closed cleanly: INTERNAL_ERROR (err 2)). Note , near future, possible download larger boxes WCS can currently handle, still capped 2 GB. need download full EMODnet Digital Bathymetry (DTM), download tile tile https://portal.emodnet-bathymetry.eu/ let’s also create subsetting bbox area interest, southern North Sea. can first check bounding box full coverage ensure subset bounding box lies within. can create bounding ensuring lies within coverage’s bounding box. Now ready download coverage provide bounding box created bbox argument.  raster returned server includes nil value (technically encodes NA) number. can access nil values band summary object using emdn_get_band_nil_values() wish encode nil values NA coverage download, can use nil_values_as_na argument.  Now, nil values encode NA plotting much informative range values within raster now constrained valid values interest.","code":"cov_summary <- emdn_get_coverage_summaries(   wcs,   coverage_id )[[1]]  emdn_get_bbox(cov_summary) #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #>   xmin   ymin   xmax   ymax  #> -75.05  34.95  20.05  75.05 bbox <- c(xmin = 1.5, ymin = 53, xmax = 6.5, ymax = 58) cov_1 <- emdn_get_coverage(wcs, coverage_id = coverage_id, bbox = bbox) #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> ── Downloading coverage \"Emodnetbio__aca_spp_19582016_L1\" ────────────────────── #> No encoding supplied: defaulting to UTF-8. #> <GMLEnvelope> #> ....|-- lowerCorner: 53 1.5 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 58 6.5 \"2016-11-16T01:00:00\" #> ✔ Coverage \"Emodnetbio__aca_spp_19582016_L1\" downloaded succesfully as a #>        terra <SpatRaster>  cov_1 #> class       : SpatRaster  #> size        : 50, 50, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 1.55, 6.55, 52.95, 57.95  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : Emodnetbio__aca_spp_19582016_L1_2016-11-16T01_00_00_53,1.5,58,6.5.tif  #> name        : Emodnetbio__aca_spp_19582016_L~6-11-16T01_00_00_53,1.5,58,6.5 terra::plot(cov_1) emdn_get_band_nil_values(cov_summary) #> relative_abundance  #>        9.96921e+36 cov_nil_to_na <- emdn_get_coverage(   wcs,   coverage_id = coverage_id,   bbox = bbox,   nil_values_as_na = TRUE ) #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> ── Downloading coverage \"Emodnetbio__aca_spp_19582016_L1\" ────────────────────── #> <GMLEnvelope> #> ....|-- lowerCorner: 53 1.5 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 58 6.5 \"2016-11-16T01:00:00\" #> ✔ Coverage \"Emodnetbio__aca_spp_19582016_L1\" downloaded succesfully as a #>        terra <SpatRaster> #> ✔ nil values 9.96920996838687e+36 converted to NA on all bands.  cov_nil_to_na #> class       : SpatRaster  #> size        : 50, 50, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 1.55, 6.55, 52.95, 57.95  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Emodnetbio__aca_spp_19582016_L1_2016-11-16T01_00_00_53,1.5,58,6.5  #> name        : Emodnetbio__aca_spp_19582016_L~6-11-16T01_00_00_53,1.5,58,6.5  #> min value   :                                                     0.3589122  #> max value   :                                                     2.5854254 terra::plot(cov_nil_to_na)"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/coverages.html","id":"subset-using-a-bounding-box-and-specific-timepoints","dir":"Articles","previous_headings":"","what":"Subset using a bounding box and specific timepoints","title":"Downloading Coverages","text":"coverage additional dimensions two geographic ones (x/long & y/lat) last point dimension always returned none specified request. Coverage Emodnetbio__aca_spp_19582016_L1 indeed temporal extent: previous request returned last timepoint coverage: However can request specific timepoints. First, let’s get list available timepoints. Next, let’s select first 3 available timepoints. can request specific timepoints supplying vector timepoints time argument. Note returns <SpatRaster> Stack instead single <SpatRaster>.  similar approach used specifying points vertical dimension, using elevation argument appropriate.","code":"emdn_get_dimension_types(cov_summary) #> [1] \"geographic\" \"geographic\" \"temporal\" temp_coefs <- emdn_get_coverage_dim_coefs(   wcs = wcs,   coverage_ids = coverage_id,   type = \"temporal\" ) timepoints <- head(temp_coefs[[1]], 3) timepoints #> [1] \"1958-02-16T01:00:00\" \"1958-05-16T01:00:00\" \"1958-08-16T01:00:00\" cov_2 <- emdn_get_coverage(   wcs,   coverage_id = coverage_id,   bbox = bbox,   time = timepoints,   nil_values_as_na = TRUE ) #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> ── Downloading coverage \"Emodnetbio__aca_spp_19582016_L1\" ────────────────────── #> <GMLEnvelope> #> ....|-- lowerCorner: 53 1.5 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 58 6.5 \"2016-11-16T01:00:00\"<GMLEnvelope> #> ....|-- lowerCorner: 53 1.5 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 58 6.5 \"2016-11-16T01:00:00\"<GMLEnvelope> #> ....|-- lowerCorner: 53 1.5 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 58 6.5 \"2016-11-16T01:00:00\" #> ✔ Coverage \"Emodnetbio__aca_spp_19582016_L1\" downloaded succesfully as a #>        terra <SpatRaster> Stack #> ✔ nil values 9.96920996838687e+36 converted to NA on all bands. cov_2 #> class       : SpatRaster  #> size        : 50, 50, 3  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 1.55, 6.55, 52.95, 57.95  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> names       : Emodnetbio~1.5,58,6.5, Emodnetbio~1.5,58,6.5, Emodnetbio~1.5,58,6.5  #> min values  :            0.04643106,              1.409593,             0.9628803  #> max values  :            0.66525388,              6.222499,             3.8682909 terra::plot(cov_2)"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/coverages.html","id":"subset-a-specific-band","dir":"Articles","previous_headings":"","what":"Subset a specific band","title":"Downloading Coverages","text":"can also request specific bands coverage. First let’s check available bands coverage. download specifc band use rangesubset argument:","code":"emdn_get_band_descriptions(cov_summary) #> [1] \"relative_abundance\" #> attr(,\"uom\") #> [1] \"W.m-2.Sr-1\" emdn_get_coverage(   wcs,   coverage_id = coverage_id,   bbox = bbox,   rangesubset = \"Relative error\",   nil_values_as_na = TRUE ) |>   terra::plot()"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/coverages.html","id":"specify-an-output-filename","dir":"Articles","previous_headings":"","what":"Specify an output filename","title":"Downloading Coverages","text":"downloading data, underlying package ows4R uses -built WCSCoverageFilenameHandler() function generating appropriate filenames parameters supplied request. However, possible override well location file written supplying file path filename argument.","code":"emdn_get_coverage(   wcs,   coverage_id = coverage_id,   bbox = bbox,   rangesubset = \"relative_abundance\",   filename = \"relative_abundance.tif\" ) #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> ── Downloading coverage \"Emodnetbio__aca_spp_19582016_L1\" ────────────────────── #> <GMLEnvelope> #> ....|-- lowerCorner: 53 1.5 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 58 6.5 \"2016-11-16T01:00:00\" #> ✔ Coverage \"Emodnetbio__aca_spp_19582016_L1\" downloaded succesfully as a #>        terra <SpatRaster> #> class       : SpatRaster  #> size        : 50, 50, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 1.55, 6.55, 52.95, 57.95  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : relative_abundance.tif  #> name        : relative_abundance"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/emodnet.wcs.html","id":"wcs-basics","dir":"Articles","previous_headings":"","what":"WCS Basics","title":"Get Started with emodnet.wcs","text":"Web Coverage Service (WCS)standard issued Open Geospatial Consortium (OGC). designed simplify remote access coverages, commonly known raster maps GIS. WCS functions HTTP protocol, setting obtain data metadata using requests available protocol. practice allows metadata raster maps obtained web browser programme uses protocol. important distinction must made WCS Web Map Service (WMS). similar, can return similar formats, WCS able return information, including valuable metadata formats. additionally allows precise queries, potentially multi-dimensional backend formats. WCS standard composed three core requests, particular purpose: GetCapabilities: request provides information particular service. DescribeCoverage: request provides detailed information particular coverage. GetCoverage: request actually obtains coverage data. WCS requests handled emodnet.wcs ows4R package. ows4R uses R6 classes implements encapsulated object-oriented programming paradigm may unfamiliar R users. emodnet.wcs wraps ows4R aims provide familiar workflows return familiar, usable easy review outputs. also provides checks validations ensure smooth easy interaction EMODnet WCS services. can however use ows4R EMODnet WCS endpoints prefer.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/emodnet.wcs.html","id":"emodnet-wcs-services","dir":"Articles","previous_headings":"","what":"EMODnet WCS Services","title":"Get Started with emodnet.wcs","text":"EMODnet portals provide number Web Coverage Services (WCS) support requests coverage data (rasters) gridded data products.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/emodnet.wcs.html","id":"available-services","dir":"Articles","previous_headings":"EMODnet WCS Services","what":"Available services","title":"Get Started with emodnet.wcs","text":"view available services endpoints, can use emdn_wcs() service_name column contains service names can used establish connections make requests EMODnet WCS services.","code":"library(emodnet.wcs) #> Loading ISO 19139 XML schemas... #> Loading ISO 19115-3 XML schemas... #> Loading ISO 19139 codelists... emdn_wcs() #> # A tibble: 4 × 2 #>   service_name     service_url                                                   #>   <chr>            <chr>                                                         #> 1 bathymetry       https://ows.emodnet-bathymetry.eu/wcs                         #> 2 biology          https://geo.vliz.be/geoserver/Emodnetbio/wcs                  #> 3 human_activities https://ows.emodnet-humanactivities.eu/wcs                    #> 4 seabed_habitats  https://ows.emodnet-seabedhabitats.eu/geoserver/emodnet_open…"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/emodnet.wcs.html","id":"connecting-to-emodnet-wcs-services","dir":"Articles","previous_headings":"","what":"Connecting to EMODnet WCS Services","title":"Get Started with emodnet.wcs","text":"can make requests services, first need create new WCS Client. specify service want connect using service argument. options logging additional messages arising ows4R underlying libculrl/curl library logger argument. can useful troubleshooting issues. 3 levels potential logging: 'NONE' (default) logger. 'INFO' includes ows4R logs. 'DEBUG' internal logs (curl details) following example sets logger \"DEBUG\". emdn_init_wcs_client() functions returns R6 object class <WCSClient>. can use methods provided within class wish (see ows4R documentation details). However emodnet.wcs provides host functions extracting/compiling useful metadata variety forms well downloading raster data emodnet.wcs service likely find easier work . examples functionality provided emodnet.wcs. details see vignettes.","code":"wcs <- emdn_init_wcs_client(\"biology\") #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\" debug_wcs <- emdn_init_wcs_client(\"biology\", logger = \"DEBUG\") #> [ows4R][INFO] OWSGetCapabilities - Fetching https://geo.vliz.be/geoserver/Emodnetbio/wcs?service=WCS&version=2.0.1&request=GetCapabilities #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\" debug_wcs #> <WCSClient> #> ....|-- url: https://geo.vliz.be/geoserver/Emodnetbio/wcs #> ....|-- version: 2.0.1 #> ....|-- capabilities <WCSCapabilities> debug_wcs$getUrl() #> [1] \"https://geo.vliz.be/geoserver/Emodnetbio/wcs\"  debug_wcs$loggerType #> [1] \"DEBUG\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/emodnet.wcs.html","id":"getting-metadata","dir":"Articles","previous_headings":"","what":"Getting Metadata","title":"Get Started with emodnet.wcs","text":"Get service level subset coverage level metadata, compiled easy review. Get detailed coverage metadata specific coverage. package offers number functions extracting individual metadata usable forms, instance: details, please refer Getting metadata Services & Coverages article emodnet.wcs online documentation.","code":"emdn_get_wcs_info(wcs = wcs) #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> $data_source #> [1] \"emodnet_wcs\" #>  #> $service_name #> [1] \"biology\" #>  #> $service_url #> [1] \"https://geo.vliz.be/geoserver/Emodnetbio/wcs\" #>  #> $service_title #> [1] \"EMODnet Biology\" #>  #> $service_abstract #> [1] \"The EMODnet Biology products include a set of gridded map layers showing the average abundance of marine species for different time windows (seasonal, annual) using geospatial modelling. The spatial modelling tool used to calculate the gridded abundance maps is based on DIVA. DIVA (Data-Interpolating Variational Analysis) is a tool to create gridded data sets from discrete point measurements of the ocean. For the representation of time dynamics, it was decided to produce gridded maps for sliding time windows, e.g. combining one or more years  in one gridded map, so that relatively smooth animated GIF presentations can be produced that show the essential change over time. EMODnet Biology’s data products include the Operational Ocean Products and Services (OOPS), harvested by ICES.\" #>  #> $service_access_constraits #> [1] \"NONE\" #>  #> $service_fees #> [1] \"NONE\" #>  #> $service_type #> [1] \"urn:ogc:service:wcs\" #>  #> $coverage_details #> # A tibble: 10 × 9 #>    coverage_id           dim_n dim_names extent crs   wgs84_bbox temporal_extent #>    <chr>                 <int> <chr>     <chr>  <chr> <chr>      <chr>           #>  1 Emodnetbio__ratio_la…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  2 Emodnetbio__aca_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  3 Emodnetbio__cal_fin_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  4 Emodnetbio__cal_hel_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  5 Emodnetbio__met_luc_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  6 Emodnetbio__oit_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  7 Emodnetbio__tem_lon_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  8 Emodnetbio__chli_195…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  9 Emodnetbio__tot_lar_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> 10 Emodnetbio__tot_sma_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> # ℹ 2 more variables: vertical_extent <chr>, subtype <chr> emdn_get_coverage_info(   wcs,   coverage_ids = \"Emodnetbio__cal_fin_19582016_L1_err\" ) #> # A tibble: 1 × 21 #>   data_source service_name     service_url coverage_id band_description band_uom #>   <chr>       <chr>            <chr>       <chr>       <chr>            <chr>    #> 1 emodnet_wcs https://geo.vli… biology     Emodnetbio… Relative abunda… W.m-2.S… #> # ℹ 15 more variables: constraint <chr>, nil_value <dbl>, dim_n <int>, #> #   dim_names <chr>, grid_size <chr>, resolution <chr>, extent <chr>, #> #   crs <chr>, wgs84_extent <chr>, temporal_extent <chr>, #> #   vertical_extent <chr>, subtype <chr>, fn_seq_rule <chr>, #> #   fn_start_point <chr>, fn_axis_order <chr> emdn_get_coverage_ids(wcs) #>  [1] \"Emodnetbio__ratio_large_to_small_19582016_L1_err\" #>  [2] \"Emodnetbio__aca_spp_19582016_L1\"                  #>  [3] \"Emodnetbio__cal_fin_19582016_L1_err\"              #>  [4] \"Emodnetbio__cal_hel_19582016_L1_err\"              #>  [5] \"Emodnetbio__met_luc_19582016_L1_err\"              #>  [6] \"Emodnetbio__oit_spp_19582016_L1_err\"              #>  [7] \"Emodnetbio__tem_lon_19582016_L1_err\"              #>  [8] \"Emodnetbio__chli_19582016_L1_err\"                 #>  [9] \"Emodnetbio__tot_lar_19582016_L1_err\"              #> [10] \"Emodnetbio__tot_sma_19582016_L1_err\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/emodnet.wcs.html","id":"downloading-coverages","dir":"Articles","previous_headings":"","what":"Downloading Coverages","title":"Get Started with emodnet.wcs","text":"package also provides function download full subsets coverages emodnet.wcs services. following example downloads spatial subset coverage using bounding box.  details downloading coverages, please refer Download Coverages article emodnet.wcs online documentation.","code":"coverage_id <- \"Emodnetbio__cal_fin_19582016_L1_err\" cov <- emdn_get_coverage(   wcs,   coverage_id = coverage_id,   bbox = c(     xmin = 0L,     ymin = 40L,     xmax = 5L,     ymax = 45L   ) ) #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> ── Downloading coverage \"Emodnetbio__cal_fin_19582016_L1_err\" ────────────────── #> <GMLEnvelope> #> ....|-- lowerCorner: 40 0 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 45 5 \"2016-11-16T01:00:00\" #> Warning in new_CppObject_xp(fields$.module, fields$.pointer, ...): GDAL Message #> 1: #> /tmp/RtmpmUJGPO/Emodnetbio__cal_fin_19582016_L1_err_2016-11-16T01_00_00_40,0,45,5.tif: #> TIFFReadDirectory:Sum of Photometric type-related color channels and #> ExtraSamples doesn't match SamplesPerPixel. Defining non-color channels as #> ExtraSamples. #> Warning in new_CppObject_xp(fields$.module, fields$.pointer, ...): GDAL Message #> 1: TIFFReadDirectory:Sum of Photometric type-related color channels and #> ExtraSamples doesn't match SamplesPerPixel. Defining non-color channels as #> ExtraSamples. #> ✔ Coverage \"Emodnetbio__cal_fin_19582016_L1_err\" downloaded succesfully as a #>        terra <SpatRaster>  cov #> class       : SpatRaster  #> size        : 50, 50, 2  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 0.05, 5.05, 39.95, 44.95  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : Emodnetbio__cal_fin_19582016_L1_err_2016-11-16T01_00_00_40,0,45,5.tif  #> names       : Emodnetbio__cal~_00_40,0,45,5_1, Emodnetbio__cal~_00_40,0,45,5_2 terra::plot(cov) #> Warning in x@pntr$readStart(): GDAL Message 1: #> /tmp/RtmpmUJGPO/Emodnetbio__cal_fin_19582016_L1_err_2016-11-16T01_00_00_40,0,45,5.tif: #> TIFFReadDirectory:Sum of Photometric type-related color channels and #> ExtraSamples doesn't match SamplesPerPixel. Defining non-color channels as #> ExtraSamples. #> Warning in x@pntr$readStart(): GDAL Message 1: #> /tmp/RtmpmUJGPO/Emodnetbio__cal_fin_19582016_L1_err_2016-11-16T01_00_00_40,0,45,5.tif: #> TIFFReadDirectory:Sum of Photometric type-related color channels and #> ExtraSamples doesn't match SamplesPerPixel. Defining non-color channels as #> ExtraSamples."},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"downloading-extracting-compiled-metadata-on-services-and-coverages-","dir":"Articles","previous_headings":"","what":"Downloading & extracting compiled metadata on services and coverages.","title":"Getting metadata about Services & Coverages","text":"First let’s load package initiate client \"biology\" EMODnet WCS server.","code":"library(emodnet.wcs) #> Loading ISO 19139 XML schemas... #> Loading ISO 19115-3 XML schemas... #> Loading ISO 19139 codelists... wcs <- emdn_init_wcs_client(service = \"biology\") #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"getting-services-level-and-coverage-level-summary-metadata-","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages.","what":"Getting services level and coverage level summary metadata.","title":"Getting metadata about Services & Coverages","text":"get service level subset coverage level compiled metadata, can use emdn_get_wcs_info(). can supply <WCSClient> object wcs argument get compiled metadata server. can get information supplying service name service argument instead <WCSClient> object argument wcs. function returns list service level metadata includes tibble summaries coverage level metadata coverage_details element. Let’s take closer look metadata coverage_details. details metadata, look emdn_get_wcs_info() help page (use ?emdn_get_wcs_info R). can get metadata EMODnet WCS services using emdn_get_wcs_info_all(). Note however can take long time execute.","code":"wcs_info <- emdn_get_wcs_info(wcs = wcs) #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8.  wcs_info #> $data_source #> [1] \"emodnet_wcs\" #>  #> $service_name #> [1] \"biology\" #>  #> $service_url #> [1] \"https://geo.vliz.be/geoserver/Emodnetbio/wcs\" #>  #> $service_title #> [1] \"EMODnet Biology\" #>  #> $service_abstract #> [1] \"The EMODnet Biology products include a set of gridded map layers showing the average abundance of marine species for different time windows (seasonal, annual) using geospatial modelling. The spatial modelling tool used to calculate the gridded abundance maps is based on DIVA. DIVA (Data-Interpolating Variational Analysis) is a tool to create gridded data sets from discrete point measurements of the ocean. For the representation of time dynamics, it was decided to produce gridded maps for sliding time windows, e.g. combining one or more years  in one gridded map, so that relatively smooth animated GIF presentations can be produced that show the essential change over time. EMODnet Biology’s data products include the Operational Ocean Products and Services (OOPS), harvested by ICES.\" #>  #> $service_access_constraits #> [1] \"NONE\" #>  #> $service_fees #> [1] \"NONE\" #>  #> $service_type #> [1] \"urn:ogc:service:wcs\" #>  #> $coverage_details #> # A tibble: 10 × 9 #>    coverage_id           dim_n dim_names extent crs   wgs84_bbox temporal_extent #>    <chr>                 <int> <chr>     <chr>  <chr> <chr>      <chr>           #>  1 Emodnetbio__ratio_la…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  2 Emodnetbio__aca_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  3 Emodnetbio__cal_fin_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  4 Emodnetbio__cal_hel_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  5 Emodnetbio__met_luc_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  6 Emodnetbio__oit_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  7 Emodnetbio__tem_lon_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  8 Emodnetbio__chli_195…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  9 Emodnetbio__tot_lar_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> 10 Emodnetbio__tot_sma_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> # ℹ 2 more variables: vertical_extent <chr>, subtype <chr> emdn_get_wcs_info(service = \"biology\") #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\" #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> $data_source #> [1] \"emodnet_wcs\" #>  #> $service_name #> [1] \"biology\" #>  #> $service_url #> [1] \"https://geo.vliz.be/geoserver/Emodnetbio/wcs\" #>  #> $service_title #> [1] \"EMODnet Biology\" #>  #> $service_abstract #> [1] \"The EMODnet Biology products include a set of gridded map layers showing the average abundance of marine species for different time windows (seasonal, annual) using geospatial modelling. The spatial modelling tool used to calculate the gridded abundance maps is based on DIVA. DIVA (Data-Interpolating Variational Analysis) is a tool to create gridded data sets from discrete point measurements of the ocean. For the representation of time dynamics, it was decided to produce gridded maps for sliding time windows, e.g. combining one or more years  in one gridded map, so that relatively smooth animated GIF presentations can be produced that show the essential change over time. EMODnet Biology’s data products include the Operational Ocean Products and Services (OOPS), harvested by ICES.\" #>  #> $service_access_constraits #> [1] \"NONE\" #>  #> $service_fees #> [1] \"NONE\" #>  #> $service_type #> [1] \"urn:ogc:service:wcs\" #>  #> $coverage_details #> # A tibble: 10 × 9 #>    coverage_id           dim_n dim_names extent crs   wgs84_bbox temporal_extent #>    <chr>                 <int> <chr>     <chr>  <chr> <chr>      <chr>           #>  1 Emodnetbio__ratio_la…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  2 Emodnetbio__aca_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  3 Emodnetbio__cal_fin_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  4 Emodnetbio__cal_hel_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  5 Emodnetbio__met_luc_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  6 Emodnetbio__oit_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  7 Emodnetbio__tem_lon_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  8 Emodnetbio__chli_195…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  9 Emodnetbio__tot_lar_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> 10 Emodnetbio__tot_sma_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> # ℹ 2 more variables: vertical_extent <chr>, subtype <chr> emdn_get_wcs_info_all()"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"getting-coverage-level-detailed-metadata","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages.","what":"Getting coverage level detailed metadata","title":"Getting metadata about Services & Coverages","text":"can get detailed coverage metadata specific coverage using emdn_get_coverage_info() supplying character vector coverage_ids. , can get information supplying service name service argument instead <WCSClient> object wcs argument. function returns tibble detailed coverage level metadata. Let’s take closer look. details metadata, look emdn_get_coverage_info() help page (use ?emdn_get_coverage_info R Rstudio). minimize number requests sent webservices, functions use memoise cache results inside active R session. clear cache, re-start R run memoise::forget(emdn_get_wcs_info)/memoise::forget(emdn_get_coverage_info)","code":"cov_info <- emdn_get_coverage_info(   wcs,   coverage_ids = \"Emodnetbio__aca_spp_19582016_L1\" ) cov_info"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"getting-individual-coverage-level-metadata","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages.","what":"Getting individual coverage level metadata","title":"Getting metadata about Services & Coverages","text":"functions compile concatenate metadata primarily tabular form easier review. However package offers number functions extracting individual metadata usable forms.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"getting-metadata-from-a-wcsclient-object-","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata","what":"Getting metadata from a <WCSClient> object.","title":"Getting metadata about Services & Coverages","text":"metadata can retrieved directly <WCSClient> object.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-coverage_ids","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSClient> object.","what":"Get coverage_ids","title":"Getting metadata about Services & Coverages","text":"can extract character vector available coverage IDs service function emdn_get_coverage_ids() can also check whether coverage given type dimension. get coefficients (points given dimension) data available specific coverages. detailed metadata requires call server return object class <WCSCoverageSummary>. can use emdn_get_coverage_summaries() get <WCSCoverageSummary> objects specific coverages. Alternativelly can request <WCSCoverageSummary> objects coverages available service. functions return list objects class <WCSCoverageSummary>, one coverage requested / available service. objects can used extract individual metadata.","code":"emdn_get_coverage_ids(wcs) #>  [1] \"Emodnetbio__ratio_large_to_small_19582016_L1_err\" #>  [2] \"Emodnetbio__aca_spp_19582016_L1\"                  #>  [3] \"Emodnetbio__cal_fin_19582016_L1_err\"              #>  [4] \"Emodnetbio__cal_hel_19582016_L1_err\"              #>  [5] \"Emodnetbio__met_luc_19582016_L1_err\"              #>  [6] \"Emodnetbio__oit_spp_19582016_L1_err\"              #>  [7] \"Emodnetbio__tem_lon_19582016_L1_err\"              #>  [8] \"Emodnetbio__chli_19582016_L1_err\"                 #>  [9] \"Emodnetbio__tot_lar_19582016_L1_err\"              #> [10] \"Emodnetbio__tot_sma_19582016_L1_err\" # Check for temporal dimension emdn_has_dimension(   wcs,   coverage_ids = \"Emodnetbio__aca_spp_19582016_L1\",   type = \"temporal\" ) #> Emodnetbio__aca_spp_19582016_L1  #>                            TRUE  # Check for vertical dimension emdn_has_dimension(   wcs,   coverage_ids = \"Emodnetbio__aca_spp_19582016_L1\",   type = \"vertical\" ) #> Emodnetbio__aca_spp_19582016_L1  #>                           FALSE emdn_get_coverage_dim_coefs(   wcs,   coverage_ids = \"Emodnetbio__aca_spp_19582016_L1\",   type = \"temporal\" ) #> $Emodnetbio__aca_spp_19582016_L1 #>   [1] \"1958-02-16T01:00:00\" \"1958-05-16T01:00:00\" \"1958-08-16T01:00:00\" #>   [4] \"1958-11-16T01:00:00\" \"1959-02-16T01:00:00\" \"1959-05-16T01:00:00\" #>   [7] \"1959-08-16T01:00:00\" \"1959-11-16T01:00:00\" \"1960-02-16T01:00:00\" #>  [10] \"1960-05-16T01:00:00\" \"1960-08-16T01:00:00\" \"1960-11-16T01:00:00\" #>  [13] \"1961-02-16T01:00:00\" \"1961-05-16T01:00:00\" \"1961-08-16T01:00:00\" #>  [16] \"1961-11-16T01:00:00\" \"1962-02-16T01:00:00\" \"1962-05-16T01:00:00\" #>  [19] \"1962-08-16T01:00:00\" \"1962-11-16T01:00:00\" \"1963-02-16T01:00:00\" #>  [22] \"1963-05-16T01:00:00\" \"1963-08-16T01:00:00\" \"1963-11-16T01:00:00\" #>  [25] \"1964-02-16T01:00:00\" \"1964-05-16T01:00:00\" \"1964-08-16T01:00:00\" #>  [28] \"1964-11-16T01:00:00\" \"1965-02-16T01:00:00\" \"1965-05-16T01:00:00\" #>  [31] \"1965-08-16T01:00:00\" \"1965-11-16T01:00:00\" \"1966-02-16T01:00:00\" #>  [34] \"1966-05-16T01:00:00\" \"1966-08-16T01:00:00\" \"1966-11-16T01:00:00\" #>  [37] \"1967-02-16T01:00:00\" \"1967-05-16T01:00:00\" \"1967-08-16T01:00:00\" #>  [40] \"1967-11-16T01:00:00\" \"1968-02-16T01:00:00\" \"1968-05-16T01:00:00\" #>  [43] \"1968-08-16T01:00:00\" \"1968-11-16T01:00:00\" \"1969-02-16T01:00:00\" #>  [46] \"1969-05-16T01:00:00\" \"1969-08-16T01:00:00\" \"1969-11-16T01:00:00\" #>  [49] \"1970-02-16T01:00:00\" \"1970-05-16T01:00:00\" \"1970-08-16T01:00:00\" #>  [52] \"1970-11-16T01:00:00\" \"1971-02-16T01:00:00\" \"1971-05-16T01:00:00\" #>  [55] \"1971-08-16T01:00:00\" \"1971-11-16T01:00:00\" \"1972-02-16T01:00:00\" #>  [58] \"1972-05-16T01:00:00\" \"1972-08-16T01:00:00\" \"1972-11-16T01:00:00\" #>  [61] \"1973-02-16T01:00:00\" \"1973-05-16T01:00:00\" \"1973-08-16T01:00:00\" #>  [64] \"1973-11-16T01:00:00\" \"1974-02-16T01:00:00\" \"1974-05-16T01:00:00\" #>  [67] \"1974-08-16T01:00:00\" \"1974-11-16T01:00:00\" \"1975-02-16T01:00:00\" #>  [70] \"1975-05-16T01:00:00\" \"1975-08-16T01:00:00\" \"1975-11-16T01:00:00\" #>  [73] \"1976-02-16T01:00:00\" \"1976-05-16T01:00:00\" \"1976-08-16T01:00:00\" #>  [76] \"1976-11-16T01:00:00\" \"1977-02-16T01:00:00\" \"1977-05-16T02:00:00\" #>  [79] \"1977-08-16T02:00:00\" \"1977-11-16T01:00:00\" \"1978-02-16T01:00:00\" #>  [82] \"1978-05-16T02:00:00\" \"1978-08-16T02:00:00\" \"1978-11-16T01:00:00\" #>  [85] \"1979-02-16T01:00:00\" \"1979-05-16T02:00:00\" \"1979-08-16T02:00:00\" #>  [88] \"1979-11-16T01:00:00\" \"1980-02-16T01:00:00\" \"1980-05-16T02:00:00\" #>  [91] \"1980-08-16T02:00:00\" \"1980-11-16T01:00:00\" \"1981-02-16T01:00:00\" #>  [94] \"1981-05-16T02:00:00\" \"1981-08-16T02:00:00\" \"1981-11-16T01:00:00\" #>  [97] \"1982-02-16T01:00:00\" \"1982-05-16T02:00:00\" \"1982-08-16T02:00:00\" #> [100] \"1982-11-16T01:00:00\" \"1983-02-16T01:00:00\" \"1983-05-16T02:00:00\" #> [103] \"1983-08-16T02:00:00\" \"1983-11-16T01:00:00\" \"1984-02-16T01:00:00\" #> [106] \"1984-05-16T02:00:00\" \"1984-08-16T02:00:00\" \"1984-11-16T01:00:00\" #> [109] \"1985-02-16T01:00:00\" \"1985-05-16T02:00:00\" \"1985-08-16T02:00:00\" #> [112] \"1985-11-16T01:00:00\" \"1986-02-16T01:00:00\" \"1986-05-16T02:00:00\" #> [115] \"1986-08-16T02:00:00\" \"1986-11-16T01:00:00\" \"1987-02-16T01:00:00\" #> [118] \"1987-05-16T02:00:00\" \"1987-08-16T02:00:00\" \"1987-11-16T01:00:00\" #> [121] \"1988-02-16T01:00:00\" \"1988-05-16T02:00:00\" \"1988-08-16T02:00:00\" #> [124] \"1988-11-16T01:00:00\" \"1989-02-16T01:00:00\" \"1989-05-16T02:00:00\" #> [127] \"1989-08-16T02:00:00\" \"1989-11-16T01:00:00\" \"1990-02-16T01:00:00\" #> [130] \"1990-05-16T02:00:00\" \"1990-08-16T02:00:00\" \"1990-11-16T01:00:00\" #> [133] \"1991-02-16T01:00:00\" \"1991-05-16T02:00:00\" \"1991-08-16T02:00:00\" #> [136] \"1991-11-16T01:00:00\" \"1992-02-16T01:00:00\" \"1992-05-16T02:00:00\" #> [139] \"1992-08-16T02:00:00\" \"1992-11-16T01:00:00\" \"1993-02-16T01:00:00\" #> [142] \"1993-05-16T02:00:00\" \"1993-08-16T02:00:00\" \"1993-11-16T01:00:00\" #> [145] \"1994-02-16T01:00:00\" \"1994-05-16T02:00:00\" \"1994-08-16T02:00:00\" #> [148] \"1994-11-16T01:00:00\" \"1995-02-16T01:00:00\" \"1995-05-16T02:00:00\" #> [151] \"1995-08-16T02:00:00\" \"1995-11-16T01:00:00\" \"1996-02-16T01:00:00\" #> [154] \"1996-05-16T02:00:00\" \"1996-08-16T02:00:00\" \"1996-11-16T01:00:00\" #> [157] \"1997-02-16T01:00:00\" \"1997-05-16T02:00:00\" \"1997-08-16T02:00:00\" #> [160] \"1997-11-16T01:00:00\" \"1998-02-16T01:00:00\" \"1998-05-16T02:00:00\" #> [163] \"1998-08-16T02:00:00\" \"1998-11-16T01:00:00\" \"1999-02-16T01:00:00\" #> [166] \"1999-05-16T02:00:00\" \"1999-08-16T02:00:00\" \"1999-11-16T01:00:00\" #> [169] \"2000-02-16T01:00:00\" \"2000-05-16T02:00:00\" \"2000-08-16T02:00:00\" #> [172] \"2000-11-16T01:00:00\" \"2001-02-16T01:00:00\" \"2001-05-16T02:00:00\" #> [175] \"2001-08-16T02:00:00\" \"2001-11-16T01:00:00\" \"2002-02-16T01:00:00\" #> [178] \"2002-05-16T02:00:00\" \"2002-08-16T02:00:00\" \"2002-11-16T01:00:00\" #> [181] \"2003-02-16T01:00:00\" \"2003-05-16T02:00:00\" \"2003-08-16T02:00:00\" #> [184] \"2003-11-16T01:00:00\" \"2004-02-16T01:00:00\" \"2004-05-16T02:00:00\" #> [187] \"2004-08-16T02:00:00\" \"2004-11-16T01:00:00\" \"2005-02-16T01:00:00\" #> [190] \"2005-05-16T02:00:00\" \"2005-08-16T02:00:00\" \"2005-11-16T01:00:00\" #> [193] \"2006-02-16T01:00:00\" \"2006-05-16T02:00:00\" \"2006-08-16T02:00:00\" #> [196] \"2006-11-16T01:00:00\" \"2007-02-16T01:00:00\" \"2007-05-16T02:00:00\" #> [199] \"2007-08-16T02:00:00\" \"2007-11-16T01:00:00\" \"2008-02-16T01:00:00\" #> [202] \"2008-05-16T02:00:00\" \"2008-08-16T02:00:00\" \"2008-11-16T01:00:00\" #> [205] \"2009-02-16T01:00:00\" \"2009-05-16T02:00:00\" \"2009-08-16T02:00:00\" #> [208] \"2009-11-16T01:00:00\" \"2010-02-16T01:00:00\" \"2010-05-16T02:00:00\" #> [211] \"2010-08-16T02:00:00\" \"2010-11-16T01:00:00\" \"2011-02-16T01:00:00\" #> [214] \"2011-05-16T02:00:00\" \"2011-08-16T02:00:00\" \"2011-11-16T01:00:00\" #> [217] \"2012-02-16T01:00:00\" \"2012-05-16T02:00:00\" \"2012-08-16T02:00:00\" #> [220] \"2012-11-16T01:00:00\" \"2013-02-16T01:00:00\" \"2013-05-16T02:00:00\" #> [223] \"2013-08-16T02:00:00\" \"2013-11-16T01:00:00\" \"2014-02-16T01:00:00\" #> [226] \"2014-05-16T02:00:00\" \"2014-08-16T02:00:00\" \"2014-11-16T01:00:00\" #> [229] \"2015-02-16T01:00:00\" \"2015-05-16T02:00:00\" \"2015-08-16T02:00:00\" #> [232] \"2015-11-16T01:00:00\" \"2016-02-16T01:00:00\" \"2016-05-16T02:00:00\" #> [235] \"2016-08-16T02:00:00\" \"2016-11-16T01:00:00\" #> attr(,\"type\") #> temporal_coefficents summaries <- emdn_get_coverage_summaries(   wcs,   coverage_ids = \"Emodnetbio__aca_spp_19582016_L1\" )  summaries #> [[1]] #> <WCSCoverageSummary> #> ....|-- CoverageId: Emodnetbio__aca_spp_19582016_L1 #> ....|-- CoverageSubtype: RectifiedGridCoverage #> ....|-- WGS84BoundingBox <OWSWGS84BoundingBox> #> ........|-- LowerCorner: -75.05 34.95 #> ........|-- UpperCorner: 20.05 75.05 #> ....|-- BoundingBox  [crs=http://www.opengis.net/def/crs/EPSG/0/4326] <OWSBoundingBox> #> ........|-- LowerCorner: -75.05 34.95 #> ........|-- UpperCorner: 20.05 75.05 emdn_get_coverage_summaries_all(wcs)"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"getting-metadata-from-a-wcscoveragesummary-object-","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata","what":"Getting metadata from a <WCSCoverageSummary> object.","title":"Getting metadata about Services & Coverages","text":"obtained <WCSCoverageSummary> object coverage interested , can extract number metadata usable forms. Let’s work single <WCSCoverageSummary> object returned previous step coverage \"Emodnetbio__aca_spp_19582016_L1\".","code":"summary <- summaries[[1]]"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-the-bounding-box","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get the bounding box","title":"Getting metadata about Services & Coverages","text":"Get bounding box (geographic extent) coverage. Coordinates given Coordinate Reference System coverage.","code":"emdn_get_bbox(summary) #>   xmin   ymin   xmax   ymax  #> -75.05  34.95  20.05  75.05"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-the-wgs84-bbox","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get the WGS84 bbox","title":"Getting metadata about Services & Coverages","text":"Get bounding box (geographic extent) coverage World Geodetic System 1984 (WGS84) Coordinate Reference System (EPSG:4326).","code":"emdn_get_WGS84bbox(summary) #>   xmin   ymin   xmax   ymax  #> -75.05  34.95  20.05  75.05"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-the-nil-value-of-a-coverage","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get the nil value of a coverage","title":"Getting metadata about Services & Coverages","text":"Get value representing nil values coverage.","code":"emdn_get_band_nil_values(summary) #> relative_abundance  #>        9.96921e+36"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-coverage-band-descriptions","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get coverage band descriptions","title":"Getting metadata about Services & Coverages","text":"Get band descriptions coverage.","code":"emdn_get_band_descriptions(summary) #> [1] \"relative_abundance\" #> attr(,\"uom\") #> [1] \"W.m-2.Sr-1\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-band-units-of-measurement","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get band units of measurement","title":"Getting metadata about Services & Coverages","text":"Get units measurement data contained bands values coverage.","code":"emdn_get_band_uom(summary) #> relative_abundance  #>       \"W.m-2.Sr-1\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-range-of-band-values","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get range of band values","title":"Getting metadata about Services & Coverages","text":"Get range values data contained bands coverage.","code":"emdn_get_band_constraints(summary) #> $relative_abundance #> [1] -3.402823e+38  3.402823e+38"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-coverage-grid-size","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get coverage grid size","title":"Getting metadata about Services & Coverages","text":"Get grid size coverage.","code":"emdn_get_grid_size(summary) #> ncol nrow  #>  951  401"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-coverage-resolution","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get coverage resolution","title":"Getting metadata about Services & Coverages","text":"Get resolution coverage.","code":"emdn_get_resolution(summary) #>   x   y  #> 0.1 0.1  #> attr(,\"uom\") #> [1] \"Deg\" \"Deg\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-coverage-grid-function","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get coverage grid function","title":"Getting metadata about Services & Coverages","text":"Get grid function coverage.","code":"emdn_get_coverage_function(summary) #> $sequence_rule #> [1] \"Linear\" #>  #> $start_point #> [1] 0 0 #>  #> $axis_order #> [1] \"+2\" \"+1\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-the-extent-of-the-temporal-dimension","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get the extent of the temporal dimension","title":"Getting metadata about Services & Coverages","text":"Get temporal extent coverage.","code":"emdn_get_temporal_extent(summary) #> [1] \"1958-02-16T01:00:00\" \"2016-11-16T01:00:00\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-the-extent-of-the-vertical-dimension","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get the extent of the vertical dimension","title":"Getting metadata about Services & Coverages","text":"Get vertical (elevation) extent coverage.","code":"emdn_get_vertical_extent(summary) #> [1] NA"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-information-about-coverage-dimensions-in-various-formats","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get information about coverage dimensions in various formats","title":"Getting metadata about Services & Coverages","text":"Get information dimensions coverage various formats. Information includes dimension label, type, unit range (tibble format).","code":"emdn_get_dimensions_info(summary) #> lat(deg):geographic; long(deg):geographic; time(s):temporal emdn_get_dimensions_info(summary, format = \"list\") #> $dim_1 #> $dim_1$label #> [1] \"Lat\" #>  #> $dim_1$uom #> [1] \"Deg\" #>  #> $dim_1$type #> [1] \"geographic\" #>  #>  #> $dim_2 #> $dim_2$label #> [1] \"Long\" #>  #> $dim_2$uom #> [1] \"Deg\" #>  #> $dim_2$type #> [1] \"geographic\" #>  #>  #> $dim_3 #> $dim_3$label #> [1] \"time\" #>  #> $dim_3$uom #> [1] \"s\" #>  #> $dim_3$type #> [1] \"temporal\" emdn_get_dimensions_info(summary, format = \"tibble\")"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-dimension-names","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get dimension names","title":"Getting metadata about Services & Coverages","text":"Get coverage dimension names (labels) units.","code":"emdn_get_dimensions_names(summary) #> [1] \"Lat (Deg), Long (Deg), time (s)\""},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-number-of-dimensions","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get number of dimensions","title":"Getting metadata about Services & Coverages","text":"Get number coverage dimensions.","code":"emdn_get_dimensions_n(summary) #> [1] 3"},{"path":"https://emodnet.github.io/emodnet.wcs/articles/metadata.html","id":"get-dimensions-types","dir":"Articles","previous_headings":"Downloading & extracting compiled metadata on services and coverages. > Getting individual coverage level metadata > Getting metadata from a <WCSCoverageSummary> object.","what":"Get dimensions types","title":"Getting metadata about Services & Coverages","text":"Get dimensions types coverage.","code":"emdn_get_dimension_types(summary) #> [1] \"geographic\" \"geographic\" \"temporal\""},{"path":"https://emodnet.github.io/emodnet.wcs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anna Krystalli. Author. Salvador Fernández-Bejarano. Maintainer. European Marine Observation Data Network (EMODnet) Biology project European Commission's Directorate - General Maritime Affairs Fisheries (DG MARE). Copyright holder. VLIZ (VLAAMS INSTITUUT VOOR DE ZEE). Funder.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krystalli (2025). emodnet.wcs: Access EMODnet Web Coverage Service data R. R package version 0.0.0.9012. Integrated data products created European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded European Union Regulation (EU) 508/2014 European Parliament Council 15 May 2014 European Maritime Fisheries Fund, https://github.com/EMODnet/emodnet.wcs.","code":"@Manual{,   title = {{emodnet.wcs}: Access EMODnet Web Coverage Service data through R},   author = {Anna Krystalli},   year = {2025},   note = {R package version 0.0.0.9012. Integrated data products created under the European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded by the European Union under Regulation (EU) No 508/2014 of the European Parliament and of the Council of 15 May 2014 on the European Maritime and Fisheries Fund},   url = {https://github.com/EMODnet/emodnet.wcs}, }"},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"emodnetwcs","dir":"","previous_headings":"","what":"Access EMODnet Web Coverage Service data through R","title":"Access EMODnet Web Coverage Service data through R","text":"goal emodnet.wcs allow interrogation access EMODnet geographic raster data R though EMODnet Web Coverage Services. See available Services. package developed Sheffield University part EMODnet Biology WP4. Web Coverage services (WCS)standard created OGC refers receiving geospatial information ‘coverages’: digital geospatial information representing space-varying phenomena. One can think Web Feature Service (WFS) raster data. gets ‘source code’ map, case ’s raw vectors raw imagery. important distinction must made WCS Web Map Service (WMS). similar, can return similar formats, WCS able return information, including valuable metadata formats. additionally allows precise queries, potentially multi-dimensional backend formats.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access EMODnet Web Coverage Service data through R","text":"can install development version emodnet.wcs GitHub : Load library want avoid reading messages emodnet.wcs “WCS client created successfully”, set \"emodnet.wcs.quiet\" option TRUE.","code":"# install.packages(\"pak\") pak::pak(\"EMODnet/emodnet.wcs\") library(emodnet.wcs) #> Loading ISO 19139 XML schemas... #> Loading ISO 19115-3 XML schemas... #> Loading ISO 19139 codelists... options(\"emodnet.wcs.quiet\" = TRUE)"},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"available-services","dir":"","previous_headings":"","what":"Available services","title":"Access EMODnet Web Coverage Service data through R","text":"available services contained tibble returned emdn_wcs(). explore available services R session use:","code":"View(emdn_wcs())"},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"create-service-client","dir":"","previous_headings":"","what":"Create Service Client","title":"Access EMODnet Web Coverage Service data through R","text":"Create new WCS Client. Specify service using theservice argument.","code":"wcs <- emdn_init_wcs_client(service = \"biology\") #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\""},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"get-metadata-about-a-wcs-service-and-available-coverages","dir":"","previous_headings":"","what":"Get metadata about a WCS service and available coverages","title":"Access EMODnet Web Coverage Service data through R","text":"Get service level subset coverage level metadata, compiled easy review supplying WCSClient object emdn_get_wcs_info. Info can also extracted using service name instead WCSClient object. Get detailed coverage metadata specific coverage. Note minimize number requests sent webservices, functions use memoise cache results inside active R session. clear cache, re-start R run memoise::forget(emdn_get_wcs_info)/memoise::forget(emdn_get_coverage_info) package also offers number functions extracting individual metadata usable forms. e.g. details, please refer Getting metadata Services & Coverages article emodnet.wcs online documentation.","code":"emdn_get_wcs_info(wcs) #> Loading required package: sf #> Linking to GEOS 3.12.2, GDAL 3.10.3, PROJ 9.4.1; sf_use_s2() is FALSE #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> $data_source #> [1] \"emodnet_wcs\" #>  #> $service_name #> [1] \"biology\" #>  #> $service_url #> [1] \"https://geo.vliz.be/geoserver/Emodnetbio/wcs\" #>  #> $service_title #> [1] \"EMODnet Biology\" #>  #> $service_abstract #> [1] \"The EMODnet Biology products include a set of gridded map layers showing the average abundance of marine species for different time windows (seasonal, annual) using geospatial modelling. The spatial modelling tool used to calculate the gridded abundance maps is based on DIVA. DIVA (Data-Interpolating Variational Analysis) is a tool to create gridded data sets from discrete point measurements of the ocean. For the representation of time dynamics, it was decided to produce gridded maps for sliding time windows, e.g. combining one or more years  in one gridded map, so that relatively smooth animated GIF presentations can be produced that show the essential change over time. EMODnet Biology’s data products include the Operational Ocean Products and Services (OOPS), harvested by ICES.\" #>  #> $service_access_constraits #> [1] \"NONE\" #>  #> $service_fees #> [1] \"NONE\" #>  #> $service_type #> [1] \"urn:ogc:service:wcs\" #>  #> $coverage_details #> # A tibble: 10 × 9 #>    coverage_id           dim_n dim_names extent crs   wgs84_bbox temporal_extent #>    <chr>                 <int> <chr>     <chr>  <chr> <chr>      <chr>           #>  1 Emodnetbio__ratio_la…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  2 Emodnetbio__aca_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  3 Emodnetbio__cal_fin_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  4 Emodnetbio__cal_hel_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  5 Emodnetbio__met_luc_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  6 Emodnetbio__oit_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  7 Emodnetbio__tem_lon_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  8 Emodnetbio__chli_195…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  9 Emodnetbio__tot_lar_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> 10 Emodnetbio__tot_sma_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> # ℹ 2 more variables: vertical_extent <chr>, subtype <chr> emdn_get_wcs_info(service = \"biology\") #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\" #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> No encoding supplied: defaulting to UTF-8. #> $data_source #> [1] \"emodnet_wcs\" #>  #> $service_name #> [1] \"biology\" #>  #> $service_url #> [1] \"https://geo.vliz.be/geoserver/Emodnetbio/wcs\" #>  #> $service_title #> [1] \"EMODnet Biology\" #>  #> $service_abstract #> [1] \"The EMODnet Biology products include a set of gridded map layers showing the average abundance of marine species for different time windows (seasonal, annual) using geospatial modelling. The spatial modelling tool used to calculate the gridded abundance maps is based on DIVA. DIVA (Data-Interpolating Variational Analysis) is a tool to create gridded data sets from discrete point measurements of the ocean. For the representation of time dynamics, it was decided to produce gridded maps for sliding time windows, e.g. combining one or more years  in one gridded map, so that relatively smooth animated GIF presentations can be produced that show the essential change over time. EMODnet Biology’s data products include the Operational Ocean Products and Services (OOPS), harvested by ICES.\" #>  #> $service_access_constraits #> [1] \"NONE\" #>  #> $service_fees #> [1] \"NONE\" #>  #> $service_type #> [1] \"urn:ogc:service:wcs\" #>  #> $coverage_details #> # A tibble: 10 × 9 #>    coverage_id           dim_n dim_names extent crs   wgs84_bbox temporal_extent #>    <chr>                 <int> <chr>     <chr>  <chr> <chr>      <chr>           #>  1 Emodnetbio__ratio_la…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  2 Emodnetbio__aca_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  3 Emodnetbio__cal_fin_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  4 Emodnetbio__cal_hel_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  5 Emodnetbio__met_luc_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  6 Emodnetbio__oit_spp_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  7 Emodnetbio__tem_lon_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  8 Emodnetbio__chli_195…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #>  9 Emodnetbio__tot_lar_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> 10 Emodnetbio__tot_sma_…     3 lat(deg)… -75.0… EPSG… -75.05, 3… 1958-02-16T01:… #> # ℹ 2 more variables: vertical_extent <chr>, subtype <chr> emdn_get_coverage_info(   wcs,   coverage_ids = \"Emodnetbio__aca_spp_19582016_L1\" ) #> # A tibble: 1 × 21 #>   data_source service_name     service_url coverage_id band_description band_uom #>   <chr>       <chr>            <chr>       <chr>       <chr>            <chr>    #> 1 emodnet_wcs https://geo.vli… biology     Emodnetbio… relative_abunda… W.m-2.S… #> # ℹ 15 more variables: constraint <chr>, nil_value <dbl>, dim_n <int>, #> #   dim_names <chr>, grid_size <chr>, resolution <chr>, extent <chr>, #> #   crs <chr>, wgs84_extent <chr>, temporal_extent <chr>, #> #   vertical_extent <chr>, subtype <chr>, fn_seq_rule <chr>, #> #   fn_start_point <chr>, fn_axis_order <chr> emdn_get_coverage_ids(wcs) #>  [1] \"Emodnetbio__ratio_large_to_small_19582016_L1_err\" #>  [2] \"Emodnetbio__aca_spp_19582016_L1\"                  #>  [3] \"Emodnetbio__cal_fin_19582016_L1_err\"              #>  [4] \"Emodnetbio__cal_hel_19582016_L1_err\"              #>  [5] \"Emodnetbio__met_luc_19582016_L1_err\"              #>  [6] \"Emodnetbio__oit_spp_19582016_L1_err\"              #>  [7] \"Emodnetbio__tem_lon_19582016_L1_err\"              #>  [8] \"Emodnetbio__chli_19582016_L1_err\"                 #>  [9] \"Emodnetbio__tot_lar_19582016_L1_err\"              #> [10] \"Emodnetbio__tot_sma_19582016_L1_err\""},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"downloading-coverages","dir":"","previous_headings":"","what":"Downloading Coverages","title":"Access EMODnet Web Coverage Service data through R","text":"package also provides function download full subsets coverages emodnet.wcs services. following example downloads spatial subset coverage using bounding box.  details downloading coverages, please refer Download Coverages article emodnet.wcs online documentation.","code":"cov <- emdn_get_coverage(   wcs,   coverage_id = \"Emodnetbio__aca_spp_19582016_L1\",   bbox = c(xmin = 0, ymin = 40, xmax = 5, ymax = 45),   nil_values_as_na = TRUE ) #> ── Downloading coverage \"Emodnetbio__aca_spp_19582016_L1\" ────────────────────── #> <GMLEnvelope> #> ....|-- lowerCorner: 40 0 \"1958-02-16T01:00:00\" #> ....|-- upperCorner: 45 5 \"2016-11-16T01:00:00\" #> ✔ Coverage \"Emodnetbio__aca_spp_19582016_L1\" downloaded succesfully as a #>        terra <SpatRaster> #> ✔ nil values 9.96920996838687e+36 converted to NA on all bands.  cov #> class       : SpatRaster  #> size        : 50, 50, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : 0.05, 5.05, 39.95, 44.95  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Emodnetbio__aca_spp_19582016_L1_2016-11-16T01_00_00_40,0,45,5  #> name        : Emodnetbio__aca_spp_19582016_L1_2016-11-16T01_00_00_40,0,45,5  #> min value   :                                                           NaN  #> max value   :                                                           NaN terra::plot(cov)"},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Access EMODnet Web Coverage Service data through R","text":"cite emodnet.wcs, please use output citation(package = \"emodnet.wcs\").","code":"citation(package = \"emodnet.wcs\") #> To cite package 'emodnet.wcs' in publications use: #>  #>   Krystalli A (????). _emodnet.wcs: Access EMODnet Web Coverage Service #>   data through R_. R package version 0.0.0.9012. Integrated data #>   products created under the European Marine Observation Data Network #>   (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), #>   funded by the European Union under Regulation (EU) No 508/2014 of the #>   European Parliament and of the Council of 15 May 2014 on the European #>   Maritime and Fisheries Fund, #>   <https://github.com/EMODnet/emodnet.wcs>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {{emodnet.wcs}: Access EMODnet Web Coverage Service data through R}, #>     author = {Anna Krystalli}, #>     note = {R package version 0.0.0.9012. Integrated data products created under the European Marine Observation Data Network (EMODnet) Biology project (EASME/EMFF/2017/1.3.1.2/02/SI2.789013), funded by the European Union under Regulation (EU) No 508/2014 of the European Parliament and of the Council of 15 May 2014 on the European Maritime and Fisheries Fund}, #>     url = {https://github.com/EMODnet/emodnet.wcs}, #>   }"},{"path":"https://emodnet.github.io/emodnet.wcs/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Access EMODnet Web Coverage Service data through R","text":"Please note emodnet.wcs project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","title":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","text":"Get coverage metadata <WCSCoverageSummary> object.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","text":"","code":"emdn_get_bbox(summary)  emdn_get_WGS84bbox(summary)  emdn_get_band_nil_values(summary)  emdn_get_band_descriptions(summary)  emdn_get_band_uom(summary)  emdn_get_band_constraints(summary)  emdn_get_grid_size(summary)  emdn_get_resolution(summary)  emdn_get_coverage_function(summary)  emdn_get_temporal_extent(summary)  emdn_get_vertical_extent(summary)  emdn_get_dimensions_info(   summary,   format = c(\"character\", \"list\", \"tibble\"),   include_coeffs = FALSE )  emdn_get_dimensions_names(summary)  emdn_get_dimensions_n(summary)  emdn_get_dimension_types(summary)"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","text":"summary <WCSCoverageSummary> object. format character string. Coverage dimension info output format. One \"character\" (default), \"list\" \"tibble\". include_coeffs whether include vector temporal vertical dimension coefficients (applicable) coverage dimension info \"list\" output format. Defaults FALSE. Ignored formats.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","text":"emdn_get_bbox: object class bbox length 4 expressing boundaries coverage extent/envelope. See sf::st_bbox() details. emdn_get_WGS84bbox: object class bbox length 4 expressing boundaries coverage extent/envelope. See sf::st_bbox() details. emdn_get_band_nil_values numeric scalar value representing nil values coverage. emdn_get_band_descriptions character vector band descriptions. emdn_get_band_uom character vector band units measurement. emdn_get_band_constraints list numeric vectors length 2 indicating min max values data contained bands coverage. emdn_get_grid_size numeric vector length 2 giving spatial size grid cells (pixels) coverage grid (ncol x nrow) emdn_get_resolution numeric vector length 2 giving spatial resolution grid cells (size x dimension, size y dimension) coverage. attached attribute uom gives units measurement dimension. emdn_get_coverage_function list elements: sequence_rule, character string, function describing sequence rule, .e. relationship axes data coordinate system axes. starting_point numeric vector length 2, location origin data coordinate system. axis_order character vector length 2 specifying axis order direction mapping values onto grid, beginning starting point. example, \"+2 +1\" indicates value range ordered bottom left top right grid envelope - lowest highest x-axis direction first (+2), lowest highest y-axis direction (+1) starting_point. emdn_get_temporal_extent coverage temporal dimension, numeric vector length 2 giving min max values dimension. Otherwise, NA. emdn_get_vertical_extent coverage vertical dimension, numeric vector length 2 giving min max values dimension. Otherwise, NA. emdn_get_dimensions_info output depends format argument: character: (default) concatenated character string dimension information list: list dimension information tibble: tibble dimension information","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_bbox.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","text":"emdn_get_bbox(): Get bounding box (geographic extent) coverage. Coordinates given Coordinate Reference System coverage. emdn_get_WGS84bbox(): Get bounding box (geographic extent) coverage World Geodetic System 1984 (WGS84) Coordinate Reference System (EPSG:4326). emdn_get_band_nil_values(): Get value representing nil values coverage. emdn_get_band_descriptions(): Get band descriptions coverage. emdn_get_band_uom(): Get units measurement data contained bands values coverage. emdn_get_band_constraints(): Get range values data contained bands coverage. emdn_get_grid_size(): Get grid size coverage. emdn_get_resolution(): Get resolution coverage. emdn_get_coverage_function(): Get grid function coverage. emdn_get_temporal_extent(): Get temporal extent coverage. emdn_get_vertical_extent(): Get vertical (elevation) extent coverage. emdn_get_dimensions_info(): Get information dimensions coverage various formats. Information includes dimension label, type, unit range (tibble format). emdn_get_dimensions_names(): Get coverage dimension names (labels) units. emdn_get_dimensions_n(): Get number coverage dimensions. emdn_get_dimension_types(): Get dimensions types coverage.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get coverage metadata from a <WCSCoverageSummary> object. — emdn_get_bbox","text":"","code":"wcs <- emdn_init_wcs_client(service = \"biology\") #> ✔ WCS client created succesfully #> ℹ Service: <https://geo.vliz.be/geoserver/Emodnetbio/wcs> #> ℹ Service: \"2.0.1\" summaries <- emdn_get_coverage_summaries_all(wcs) summary <- summaries[[1]] # get bbox emdn_get_bbox(summary) #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #>   xmin   ymin   xmax   ymax  #> -75.05  34.95  20.05  75.05  # get WGS84 bbox emdn_get_WGS84bbox(summary) #>   xmin   ymin   xmax   ymax  #> -75.05  34.95  20.05  75.05  # get the nil value of a coverage emdn_get_band_nil_values(summary) #> Relative abundance     Relative error  #>        9.96921e+36        9.96921e+36  # get coverage band descriptions emdn_get_band_descriptions(summary) #> [1] \"Relative abundance\" \"Relative error\"     #> attr(,\"uom\") #> [1] \"W.m-2.Sr-1\" \"W.m-2.Sr-1\" # get band units of measurement emdn_get_band_uom(summary) #> Relative abundance     Relative error  #>       \"W.m-2.Sr-1\"       \"W.m-2.Sr-1\"  # get range of band values emdn_get_band_constraints(summary) #> $`Relative abundance` #> [1] -3.402823e+38  3.402823e+38 #>  #> $`Relative error` #> [1] -3.402823e+38  3.402823e+38 #>  # get coverage grid size emdn_get_grid_size(summary) #> No encoding supplied: defaulting to UTF-8. #> ncol nrow  #>  951  401  # get coverage resolution emdn_get_resolution(summary) #>   x   y  #> 0.1 0.1  #> attr(,\"uom\") #> [1] \"Deg\" \"Deg\" # get coverage grid function emdn_get_coverage_function(summary) #> $sequence_rule #> [1] \"Linear\" #>  #> $start_point #> [1] 0 0 #>  #> $axis_order #> [1] \"+2\" \"+1\" #>  # get the extent of the temporal dimension emdn_get_temporal_extent(summary) #> [1] \"1958-02-16T01:00:00\" \"2016-11-16T01:00:00\" # get the extent of the vertical dimension emdn_get_vertical_extent(summary) #> [1] NA # get information about coverage dimensions in various formats emdn_get_dimensions_info(summary) #> lat(deg):geographic; long(deg):geographic; time(s):temporal emdn_get_dimensions_info(summary, format = \"list\") #> $dim_1 #> $dim_1$label #> [1] \"Lat\" #>  #> $dim_1$uom #> [1] \"Deg\" #>  #> $dim_1$type #> [1] \"geographic\" #>  #>  #> $dim_2 #> $dim_2$label #> [1] \"Long\" #>  #> $dim_2$uom #> [1] \"Deg\" #>  #> $dim_2$type #> [1] \"geographic\" #>  #>  #> $dim_3 #> $dim_3$label #> [1] \"time\" #>  #> $dim_3$uom #> [1] \"s\" #>  #> $dim_3$type #> [1] \"temporal\" #>  #>  emdn_get_dimensions_info(summary, format = \"tibble\") #> # A tibble: 3 × 5 #>   dimension label uom   type       range                                     #>       <int> <chr> <chr> <chr>      <chr>                                     #> 1         1 lat   deg   geographic NA                                        #> 2         2 long  deg   geographic NA                                        #> 3         3 time  s     temporal   1958-02-16T01:00:00 - 2016-11-16T01:00:00 # get dimension names emdn_get_dimensions_names(summary) #> [1] \"Lat (Deg), Long (Deg), time (s)\" # get number of dimensions emdn_get_dimensions_n(summary) #> [1] 3 # get dimensions types emdn_get_dimension_types(summary) #> [1] \"geographic\" \"geographic\" \"temporal\""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a coverage from an EMODnet WCS Service — emdn_get_coverage","title":"Get a coverage from an EMODnet WCS Service — emdn_get_coverage","text":"Get coverage EMODnet WCS Service","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a coverage from an EMODnet WCS Service — emdn_get_coverage","text":"","code":"emdn_get_coverage(   wcs = NULL,   service = NULL,   coverage_id,   service_version = c(\"2.0.1\", \"2.1.0\", \"2.0.0\", \"1.1.1\", \"1.1.0\"),   logger = c(\"NONE\", \"INFO\", \"DEBUG\"),   bbox = NULL,   crs = NULL,   time = NULL,   elevation = NULL,   format = NULL,   rangesubset = NULL,   filename = NULL,   nil_values_as_na = FALSE )"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a coverage from an EMODnet WCS Service — emdn_get_coverage","text":"wcs WCSClient R6 object, created function emdn_init_wcs_client. service EMODnet OGC WCS service name. available services, see emdn_wcs(). coverage_id character string. Coverage ID. service_version WCS service version. Defaults \"2.0.1\". logger character string. Level logger: 'NONE' logger, 'INFO' get ows4R logs, 'DEBUG' internal logs (Curl details) bbox named numeric vector length 4, names xmin, ymin, xmax ymax. specifying bounding box. (extent) raster returned. crs CRS supplied bounding box. Leave NULL (default) coverage crs. time coverages include temporal dimension, vector temporal coefficients specifying time points coverage data returned. NULL (default), last time point returned. get list available temporal coefficients, see emdn_get_coverage_dim_coefs. single time point, SpatRaster returned. one time points, SpatRaster stack returned. elevation coverages include vertical dimension, vector vertical coefficients specifying elevation coverage data returned. NULL (default), last elevation returned. get list available vertical coefficients, see emdn_get_coverage_dim_coefs. single elevation, SpatRaster returned. one elevation, SpatRaster stack returned. format format file coverage written . rangesubset character vector band descriptions subset. filename file name write . nil_values_as_na logical. raster nil values converted NA?","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a coverage from an EMODnet WCS Service — emdn_get_coverage","text":"object class terra::SpatRaster. function also writes coverage local file.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a coverage from an EMODnet WCS Service — emdn_get_coverage","text":"","code":"if (FALSE) { # \\dontrun{ wcs <- emdn_init_wcs_client(service = \"biology\") coverage_id <- \"Emodnetbio__cal_fin_19582016_L1_err\" # Subset using a bounding box emdn_get_coverage(wcs,   coverage_id = coverage_id,   bbox = c(     xmin = 0, ymin = 40,     xmax = 5, ymax = 45   ) ) # Subset using a bounding box and specific timepoints emdn_get_coverage(wcs,   coverage_id = coverage_id,   bbox = c(     xmin = 0, ymin = 40,     xmax = 5, ymax = 45   ),   time = c(     \"1963-11-16T00:00:00.000Z\",     \"1964-02-16T00:00:00.000Z\"   ) ) # Subset using a bounding box and a specific band emdn_get_coverage(wcs,   coverage_id = coverage_id,   bbox = c(     xmin = 0, ymin = 40,     xmax = 5, ymax = 45   ),   rangesubset = \"Relative abundance\" ) } # }"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","title":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","text":"Get metadata objects WCSClient object. <WCSCoverageSummary> particular can used extract metadata individual coverages.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","text":"","code":"emdn_get_coverage_summaries(wcs, coverage_ids)  emdn_get_coverage_summaries_all(wcs)  emdn_get_coverage_ids(wcs)  emdn_has_dimension(wcs, coverage_ids, type = c(\"temporal\", \"vertical\"))  emdn_get_coverage_dim_coefs(   wcs,   coverage_ids,   type = c(\"temporal\", \"vertical\") )"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","text":"wcs WCSClient R6 object, created function emdn_init_wcs_client. coverage_ids character vector coverage IDs. type coverage dimension type. One \"temporal\" \"vertical\".","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","text":"emdn_get_coverage_summaries: returns list objects class <WCSCoverageSummary> coverage_id provided. emdn_get_coverage_summaries_all: returns list objects class <WCSCoverageSummary> coverage avalable service. emdn_get_coverage_ids returns character vector coverage ids. emdn_get_coverage_dim_coefs returns list containing vector coefficients coverage requested. list containing vector coefficients coverage requested.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage_summaries.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","text":"emdn_get_coverage_summaries(): Get summaries specific coverages. emdn_get_coverage_summaries_all(): Get summaries available coverages service. emdn_get_coverage_ids(): Get coverage IDs available coverages service. emdn_has_dimension(): check whether coverage temporal vertical dimension. emdn_get_coverage_dim_coefs(): Get temporal vertical coefficients coverage.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_coverage_summaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata objects from a WCSClient object. — emdn_get_coverage_summaries","text":"","code":"if (FALSE) { # \\dontrun{ wcs <- emdn_init_wcs_client(service = \"biology\") cov_ids <- emdn_get_coverage_ids(wcs) cov_ids emdn_has_dimension(wcs,   cov_ids,   type = \"temporal\" ) emdn_has_dimension(wcs,   cov_ids,   type = \"vertical\" ) emdn_get_coverage_summaries(wcs, cov_ids[1:2]) emdn_get_coverage_summaries_all(wcs) emdn_get_coverage_dim_coefs(wcs,   cov_ids[1:2],   type = \"temporal\" ) } # }"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"Get EMODnet WCS service available coverage information.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"","code":"emdn_get_wcs_info(   wcs = NULL,   service = NULL,   service_version = c(\"2.0.1\", \"2.1.0\", \"2.0.0\", \"1.1.1\", \"1.1.0\"),   logger = c(\"NONE\", \"INFO\", \"DEBUG\") )  emdn_get_wcs_info_all(logger = c(\"NONE\", \"INFO\", \"DEBUG\"))  emdn_get_coverage_info(   wcs = NULL,   service = NULL,   coverage_ids,   service_version = c(\"2.0.1\", \"2.1.0\", \"2.0.0\", \"1.1.1\", \"1.1.0\"),   logger = c(\"NONE\", \"INFO\", \"DEBUG\") )"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"wcs WCSClient R6 object, created function emdn_init_wcs_client. service EMODnet OGC WCS service name. available services, see emdn_wcs(). service_version WCS service version. Defaults \"2.0.1\". logger character string. Level logger: 'NONE' logger, 'INFO' get ows4R logs, 'DEBUG' internal logs (Curl details) coverage_ids character vector coverage IDs.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"emdn_get_wcs_info & emdn_get_wcs_info return list service level metadata, including tibble containing coverage level metadata coverage available service. emdn_get_coverage_info returns list containing tibble detailed metadata coverage specified.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"emdn-get-wcs-info-emdn-get-wcs-info-all","dir":"Reference","previous_headings":"","what":"emdn_get_wcs_info / emdn_get_wcs_info_all","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"emdn_get_wcs_info emdn_get_wcs_info_all return list following metadata: data_source: EMODnet source data. service_name: EMODnet WCS service name. service_url: EMODnet WCS service URL. service_title: EMODnet WCS service title. service_abstract: EMODnet WCS service abstract. service_access_constraits: access constraints associated EMODnet WCS service. service_fees: access fees associated EMODnet WCS service. service_type: EMODnet WCS service type. coverage_details: tibble details coverage available EMODnet WCS service: coverage_id: coverage ID. dim_n: number coverage dimensions dim_names: coverage dimension names, units (brackets) types. extent: coverage extent (xmin, ymin, xmax ymax). crs: coverage CRS (Coordinate Reference System). wgs84_bbox: coverage extent (xmin, ymin, xmax ymax) WGS84 (EPSG:4326) CRS coordinates. temporal_extent: coverage temporal extent (min - max), NA coverage contains temporal dimension. vertical_extent: coverage vertical extent (min - max), NA coverage contains vertical dimension. subtype: coverage subtype.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"emdn-get-coverage-info","dir":"Reference","previous_headings":"","what":"emdn_get_coverage_info","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"emdn_get_coverage_info returns tibble row coverage specified columns following details: data_source: EMODnet source data. service_name: EMODnet WCS service name. service_url: EMODnet WCS service URL. coverage_ids: coverage ID. band_description: description data contained band coverage. band_uom: unit measurement data contained band coverage. bands share unit measurement, single shared uom shown. constraint: range values data contained band coverage. bands share constraint, single shared constraint range shown. nil_value: nil values data contained band coverage. bands share nil value, single shared nil value shown. grid_size: spatial size coverage grid (ncol x nrow). resolution: spatial resolution (pixel size) coverage grid CRS units measurement (size x dimension x size y dimension). dim_n: number coverage dimensions dim_names: coverage dimension names, units (brackets) types. extent: coverage extent (xmin, ymin, xmax ymax). crs: coverage CRS (Coordinate Reference System). wgs84_bbox: coverage extent (xmin, ymin, xmax ymax) WGS84 (EPSG:4326) CRS coordinates. temporal_extent: coverage temporal extent (min - max), NA coverage contains temporal dimension. vertical_extent: coverage vertical extent (min - max), NA coverage contains vertical dimension. subtype: coverage subtype. fn_seq_rule: function describing sequence rule specifies relationship axes data coordinate system axes. fn_start_point: location origin data coordinate system. fn_axis_order: axis order direction mapping values onto grid, beginning starting point. example, \"+2 +1\" indicates value range ordered bottom left top right grid envelope - lowest highest x-axis direction first (+2), lowest highest y-axis direction (+1) starting_point. additional details WCS metadata, see GDAL wiki section WCS Basics GDAL","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"minimize number requests sent webservices, functions use memoise cache results inside active R session. clear cache, re-start R run memoise::forget(emdn_get_wcs_info)/memoise::forget(emdn_get_coverage_info)","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"emdn_get_wcs_info(): Get info coverages EMODnet WCS service. emdn_get_wcs_info_all(): Get metadata services available coverages service. emdn_get_coverage_info(): Get metadata specific coverages. Requires WCSClient R6 object input.","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_get_wcs_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get EMODnet WCS service and available coverage information. — emdn_get_wcs_info","text":"","code":"if (FALSE) { # \\dontrun{ # Get information from a wcs object. wcs <- emdn_init_wcs_client(service = \"seabed_habitats\") emdn_get_wcs_info(wcs) # Get information using a service name. emdn_get_wcs_info(service = \"biology\") # Get detailed info for specific coverages from wcs object coverage_ids <- c(   \"emodnet_open_maplibrary__mediseh_cora\",   \"emodnet_open_maplibrary__mediseh_posidonia\" ) emdn_get_coverage_info(   wcs = wcs,   coverage_ids = coverage_ids ) } # }"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_init_wcs_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise an EMODnet WCS client — emdn_init_wcs_client","title":"Initialise an EMODnet WCS client — emdn_init_wcs_client","text":"Initialise EMODnet WCS client","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_init_wcs_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise an EMODnet WCS client — emdn_init_wcs_client","text":"","code":"emdn_init_wcs_client(   service,   service_version = c(\"2.0.1\", \"2.1.0\", \"2.0.0\", \"1.1.1\", \"1.1.0\"),   logger = c(\"NONE\", \"INFO\", \"DEBUG\") )"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_init_wcs_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise an EMODnet WCS client — emdn_init_wcs_client","text":"service EMODnet OGC WCS service name. available services, see emdn_wcs(). service_version WCS service version. Defaults \"2.0.1\". logger character string. Level logger: 'NONE' logger, 'INFO' get ows4R logs, 'DEBUG' internal logs (Curl details)","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_init_wcs_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise an EMODnet WCS client — emdn_init_wcs_client","text":"ows4R::WCSClient R6 object methods interfacing OGC Web Coverage Service.","code":""},{"path":[]},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_init_wcs_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialise an EMODnet WCS client — emdn_init_wcs_client","text":"","code":"if (FALSE) { # interactive() wcs <- emdn_init_wcs_client(service = \"bathymetry\") }"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_wcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Available EMODnet Web Coverage Services — emdn_wcs","title":"Available EMODnet Web Coverage Services — emdn_wcs","text":"Available EMODnet Web Coverage Services","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_wcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available EMODnet Web Coverage Services — emdn_wcs","text":"","code":"emdn_wcs()"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_wcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available EMODnet Web Coverage Services — emdn_wcs","text":"Tibble available EMODnet Web Coverage Services","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emdn_wcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available EMODnet Web Coverage Services — emdn_wcs","text":"","code":"emdn_wcs() #> # A tibble: 4 × 2 #>   service_name     service_url                                                   #>   <chr>            <chr>                                                         #> 1 bathymetry       https://ows.emodnet-bathymetry.eu/wcs                         #> 2 biology          https://geo.vliz.be/geoserver/Emodnetbio/wcs                  #> 3 human_activities https://ows.emodnet-humanactivities.eu/wcs                    #> 4 seabed_habitats  https://ows.emodnet-seabedhabitats.eu/geoserver/emodnet_open…"},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emodnet.wcs-package.html","id":null,"dir":"Reference","previous_headings":"","what":"emodnet.wcs: Access EMODnet Web Coverage Service data through R — emodnet.wcs-package","title":"emodnet.wcs: Access EMODnet Web Coverage Service data through R — emodnet.wcs-package","text":"Access interrogate EMODnet Web Coverage Service data R.","code":""},{"path":[]},{"path":"https://emodnet.github.io/emodnet.wcs/reference/emodnet.wcs-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"emodnet.wcs: Access EMODnet Web Coverage Service data through R — emodnet.wcs-package","text":"Maintainer: Salvador Fernández-Bejarano salvador.fernandez@vliz.(ORCID) Authors: Anna Krystalli annakrystalli@googlemail.com (ORCID) contributors: European Marine Observation Data Network (EMODnet) Biology project European Commission's Directorate - General Maritime Affairs Fisheries (DG MARE) bio@emodnet.eu [copyright holder] VLIZ (VLAAMS INSTITUUT VOOR DE ZEE) info@vliz.(ROR) [funder]","code":""},{"path":"https://emodnet.github.io/emodnet.wcs/news/index.html","id":"emodnetwcs-0009009","dir":"Changelog","previous_headings":"","what":"emodnet.wcs 0.0.0.9009","title":"emodnet.wcs 0.0.0.9009","text":"Added NEWS.md file track changes package.","code":""}]
